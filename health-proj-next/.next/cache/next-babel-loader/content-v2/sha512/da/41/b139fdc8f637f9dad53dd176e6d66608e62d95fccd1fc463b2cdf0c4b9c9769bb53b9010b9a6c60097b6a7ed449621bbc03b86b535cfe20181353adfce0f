{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Documents\\\\reactjs\\\\healthy-pomodoro\\\\health-proj-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setCHallengesCompleted = _useState3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"RbvfyRrm7Y8NnQHfj6UroqLFrmM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/Bruno/Documents/reactjs/healthy-pomodoro/health-proj-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setCHallengesCompleted","levelUp"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAA2C;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACpBH,QAAQ,CAAC,CAAD,CADY;AAAA,MACvCI,KADuC;AAAA,MAChCC,QADgC;;AAAA,mBAEIL,QAAQ,CAAC,CAAD,CAFZ;AAAA,MAEvCM,iBAFuC;AAAA,MAEpBC,oBAFoB;;AAAA,mBAGQP,QAAQ,CAAC,CAAD,CAHhB;AAAA,MAGvCQ,mBAHuC;AAAA,MAGlBC,sBAHkB;;AAK9C,WAASC,OAAT,GAAmB;AACjBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAALA,KAAD;AAAQE,MAAAA,iBAAiB,EAAjBA,iBAAR;AAA2BE,MAAAA,mBAAmB,EAAnBA;AAA3B,KAAnC;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAdeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\r\n\r\nexport const ChallengesContext = createContext({});\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider( { children }) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setCHallengesCompleted] = useState(0);\r\n\r\n    function levelUp() {\r\n      setLevel(level + 1);\r\n    }\r\n\r\n    return (\r\n        <ChallengesContext.Provider value={{level, currentExperience, challengesCompleted}}>\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}