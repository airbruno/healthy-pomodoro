{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Documents\\\\reactjs\\\\healthy-pomodoro\\\\health-proj-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function StartCountdown() {\n    setIsActive(true);\n  }\n\n  function ResetCountdown() {\n    setIsActive(false);\n    clearTimeout(countdownTimeout);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo finalizado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: ResetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: StartCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Bruno/Documents/reactjs/healthy-pomodoro/health-proj-next/src/components/Countdown.tsx"],"names":["useEffect","styles","Countdown","minuteLeft","minuteRight","String","minutes","padStart","split","secondLeft","secondRight","seconds","StartCountdown","setIsActive","ResetCountdown","clearTimeout","countdownTimeout","setTime","isActive","time","setTimeout","setHasFinished","startNewChallenge","countdownContainer","hasFinished","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAAmBA,SAAnB,QAAgD,OAAhD;AAIA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;;AAEA,WAASI,cAAT,GAA0B;AACtBC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,YAAY,CAACC,gBAAD,CAAZ;AACAC,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AACH;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAQ,IAAIC,IAAI,GAAG,CAAvB,EAA0B;AACtBH,MAAAA,gBAAgB,GAAGI,UAAU,CAAC,MAAM;AAChCH,QAAAA,OAAO,CAACE,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAID,QAAQ,IAAIC,IAAI,IAAI,CAAxB,EAA2B;AAC9BE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAR,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAS,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACJ,QAAD,EAAWC,IAAX,CAVM,CAAT;AAYA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACsB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOpB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKc,WAAW,gBACR;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAEvB,MAAM,CAACwB,eAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBASR;AAAA,gBACEP,QAAQ,gBACN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEjB,MAAM,CAACwB,eAAgB,IAAGxB,MAAM,CAACyB,qBAAsB,EAFvE;AAGE,QAAA,OAAO,EAAEZ,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBASN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEb,MAAM,CAACwB,eAFpB;AAGE,QAAA,OAAO,EAAEb,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,qBAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { start } from 'repl';\r\nimport { getNodeMajorVersion } from 'typescript';\r\nimport { ChallengesContext, ChallengesProvider } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/components/Countdown.module.css'\r\n\r\nexport function Countdown() {\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    function StartCountdown() {\r\n        setIsActive(true);\r\n    }\r\n\r\n    function ResetCountdown() {\r\n        setIsActive(false);\r\n        clearTimeout(countdownTimeout);\r\n        setTime(0.05 * 60);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isActive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        } else if (isActive && time == 0) {\r\n            setHasFinished(true);\r\n            setIsActive(false);\r\n            startNewChallenge();\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button\r\n                  disabled\r\n                  className={styles.countdownButton}\r\n\r\n                >\r\n                    Ciclo finalizado\r\n                </button>\r\n            ) : (\r\n                <>\r\n                { isActive ? (\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n                      onClick={ResetCountdown}\r\n                        >\r\n                        Abandonar ciclo\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      className={styles.countdownButton}\r\n                      onClick={StartCountdown}\r\n                    >\r\n                      Iniciar um ciclo\r\n                    </button>\r\n                ) }\r\n                </>\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}